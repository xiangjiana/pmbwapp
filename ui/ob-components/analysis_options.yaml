include: package:lint/analysis_options.yaml

# 全部规则 https://github.com/dart-lang/linter/blob/master/example/all.yaml
linter:
  rules:
    # 使用 json 响应中的参数顺序
    always_put_required_named_parameters_first: true

    # 避免只有静态成员的类
    avoid_classes_with_only_static_members: true
    # Make constructors the first thing in every class
    sort_constructors_first: true

    prefer_single_quotes: false
    prefer_double_quotes: false

    # Good packages document everything
    public_member_api_docs: true

    # Blindly follow the Flutter code style, which prefers types everywhere
    #总是指定类型
    always_specify_types: true

    # Back to the 80s  超过 80 个字符的行
    lines_longer_than_80_chars: true
    #always_declare_return_types: true
    always_put_control_body_on_new_line: fasle
    always_require_non_null_named_parameters: true
    annotate_overrides: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_empty_else: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_field_initializers_in_const_classes: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null_for_void: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_types_as_parameter_names: true
    avoid_unused_constructor_parameters: true
    avoid_void_async:  true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    cancel_subscriptions: true
    cast_nullable_to_non_nullable: true
    control_flow_in_finally: true
    directives_ordering: true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    exhaustive_cases: true
    flutter_style_todos: true
    hash_and_equals: true
    implementation_imports: true
    iterable_contains_unrelated_type: true
    leading_newlines_in_multiline_strings: true
    library_names: true
    library_prefixes: true
    list_remove_unrelated_type: true
    no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    non_constant_identifier_names: true
    null_check_on_nullable_type_parameter: true
    overridden_fields: true
    package_api_docs: true
    package_prefixed_library_names: true
    prefer_adjacent_string_concatenation: true
    prefer_asserts_in_initializer_lists: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_foreach: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    prefer_void_to_null: true
    recursive_getters: true
    slash_for_doc_comments: true
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    #throw_in_finally: true
    tighten_type_of_initializing_formals: true
    type_init_formals: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_getters_setters: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unrelated_type_equality_checks: true
    #use_full_hex_values_for_flutter_colors: true
    use_is_even_rather_than_modulo: true
    use_late_for_private_fields_and_variables: true
    use_raw_strings: true
    use_rethrow_when_possible: true
    valid_regexps: true
    void_checks: true


#analyzer:
#  strong-mode:
#    implicit-casts: true
#    implicit-dynamic: true
#  errors:
#    #更改规则的严重程度
#    # treat missing required parameters as a warning (not a hint)
#    missing_required_param: warning
#    # treat missing returns as a warning (not a hint)
#    missing_return: ignore
#    # allow having TODOs in the code
#    #忽略指定的linter规则
#    todo: ignore
#    mixin_inherits_from_not_object: ignore
#    # allow self-reference to deprecated members (we do this because otherwise we have
#    # to annotate every member in every test, assert, etc, when we deprecate something)
#    deprecated_member_use_from_same_package: ignore
#    # Ignore analyzer hints for updating pubspecs when using Future or
#    # Stream and not importing dart:async
#    # Please see https://github.com/flutter/flutter/pull/24528 for details.
#    sdk_version_async_exported_from_core: ignore
#    always_declare_return_types: ignore
#    #排除特定規則 和类
#  exclude:
#    - "bin/cache/**"
#    # the following two are relative to the stocks example and the flutter package respectively
#    # see https://github.com/dart-lang/sdk/issues/28463
#    - "lib/i18n/messages_*.dart"
#    - "lib/src/http/**"
#    - "test_fixes/**"
#    - "test_fixes/**"





