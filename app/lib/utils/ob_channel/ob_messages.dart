// Autogenerated from Pigeon (v0.2.4), do not edit directly.
// See also: https://pub.dev/packages/pigeon
// ignore_for_file: public_member_api_docs, non_constant_identifier_names, avoid_as, unused_import, unnecessary_parenthesis, prefer_null_aware_operators, omit_local_variable_types
// @dart = 2.12
import 'dart:async';
import 'dart:typed_data' show Uint8List, Int32List, Int64List, Float64List;

import 'package:flutter/services.dart';

class CommonParams {
  String? pageName;
  String? uniqueId;
  Map<Object?, Object?>? arguments;
  bool? opaque;
  String? key;

  Object encode() {
    final Map<Object?, Object?> pigeonMap = <Object?, Object?>{};
    pigeonMap['pageName'] = pageName;
    pigeonMap['uniqueId'] = uniqueId;
    pigeonMap['arguments'] = arguments;
    pigeonMap['opaque'] = opaque;
    pigeonMap['key'] = key;
    return pigeonMap;
  }

  static CommonParams decode(Object message) {
    final Map<Object?, Object?> pigeonMap = message as Map<Object?, Object?>;
    return CommonParams()
      ..pageName = pigeonMap['pageName'] as String?
      ..uniqueId = pigeonMap['uniqueId'] as String?
      ..arguments = pigeonMap['arguments'] as Map<Object?, Object?>?
      ..opaque = pigeonMap['opaque'] as bool?
      ..key = pigeonMap['key'] as String?;
  }
}

class StackInfo {
  List<Object?>? containers;
  Map<Object?, Object?>? routes;

  Object encode() {
    final Map<Object?, Object?> pigeonMap = <Object?, Object?>{};
    pigeonMap['containers'] = containers;
    pigeonMap['routes'] = routes;
    return pigeonMap;
  }

  static StackInfo decode(Object message) {
    final Map<Object?, Object?> pigeonMap = message as Map<Object?, Object?>;
    return StackInfo()
      ..containers = pigeonMap['containers'] as List<Object?>?
      ..routes = pigeonMap['routes'] as Map<Object?, Object?>?;
  }
}

